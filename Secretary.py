import openai
from openai import OpenAI
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TELEGRAM_TOKEN = '8138969116:AAFa3n38GOqkfQW-UfpMBudTzxW9SKCSknQ'
OPENAI_API_KEY = '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'

client = OpenAI(api_key=OPENAI_API_KEY)

user_conversations = {}
user_bot_messages = {}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Å—Ç–∏–ª–µ–º –æ–±—â–µ–Ω–∏—è
system_prompt = {
    "role": "system",
    "content": (
        "–¢—ã ‚Äî –¥–æ–±—Ä—ã–π –∏ –ø–æ–Ω–∏–º–∞—é—â–∏–π –¥—Ä—É–≥. "
        "–¢–µ–±—è –∑–æ–≤—É—Ç –í–∏–≤—å–µ–Ω –í–∏–Ω–≥–∞–ª—å 4-–π"
        "–ù–æ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø—Ä–æ—Å—Ç–æ –í–∏ –∏–ª–∏ –í–∏–≤—å–µ–Ω"
        "–ì–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ, –∏–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –ª—ë–≥–∫—É—é —à—É—Ç–∫—É, "
        "–Ω–æ –Ω–µ –±—É–¥—å –∏–∑–¥–µ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –¥—Ä—É–∂–µ—Å–∫–∏–π —Ç–æ–Ω."
    )
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_conversations[user_id] = []
    user_bot_messages[user_id] = []
    await update.message.reply_text("–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –Ø –í–∏–≤—å–µ–Ω –í–∏–Ω–≥–∞–ª—å 4-–π –Ω–æ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –í–∏ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å–µ–∫—Ä–∏—Ç–∞—Ä—å. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏ –∏ —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É.")

async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    # –û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if user_id in user_conversations:
        del user_conversations[user_id]

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if user_id in user_bot_messages:
        for msg_id in user_bot_messages[user_id]:
            try:
                await context.bot.delete_message(chat_id, msg_id)
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ)
        user_bot_messages[user_id] = []

    await update.message.reply_text("üßπ –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω –∏ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_message = update.message.text
    chat_id = update.effective_chat.id

    if user_id not in user_conversations:
        user_conversations[user_id] = []
    if user_id not in user_bot_messages:
        user_bot_messages[user_id] = []

    user_conversations[user_id].append({"role": "user", "content": user_message})

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    messages = [system_prompt] + user_conversations[user_id][-10:]

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages
        )
        reply = response.choices[0].message.content

        user_conversations[user_id].append({"role": "assistant", "content": reply})

        sent_msg = await update.message.reply_text(reply)
        user_bot_messages[user_id].append(sent_msg.message_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞

    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —Å –ò–ò.")
        print(e)

app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("reset", reset))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

app.run_polling()
